<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>#Webhooks on Metricly Docs</title>
    <link>https://metriclyhelpsite.netlify.com/tags/webhooks/</link>
    <description>Recent content in #Webhooks on Metricly Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://metriclyhelpsite.netlify.com/tags/webhooks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create External Event Conditions</title>
      <link>https://metriclyhelpsite.netlify.com/alerts-notifications/policies/create-external-event-conditions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metriclyhelpsite.netlify.com/alerts-notifications/policies/create-external-event-conditions/</guid>
      <description>External Event conditions for policies are typically used in conjunction with Webhook integrations. See the Webhook integration setup or Webhook API documentation for more information.
 Open Policy Editor. Click Conditions. Click Add Condition, then select Add External Event Condition.  Type into the fields to create a proper filter:  Message Contains: A regex statement that attempts to match a word or phrase in the event message. Title Contains: A regex statement that attempts to match a word or phrase in the eventâ€™s title.</description>
    </item>
    
    <item>
      <title>Webhooks Notifications</title>
      <link>https://metriclyhelpsite.netlify.com/alerts-notifications/notifications/notifications-webhooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metriclyhelpsite.netlify.com/alerts-notifications/notifications/notifications-webhooks/</guid>
      <description>There are two main uses for webhooks: pushing data into metricly (inbound) and pulling data like notifications out (outbound).
 Inbound: Achieved via POST URL that can be found on the Webhook integration card. Outbound: Used by several of our notification integrations and accessible through the Webhook GET API endpoint.  For a great example of an inbound webhook usecase, see how we pushed CloudWatch Logs into Metricly.
When using the outbound method, you can customize the JSON payload using the freemarker markup language from Account &amp;gt; Notifications &amp;gt; Webhook.</description>
    </item>
    
  </channel>
</rss>