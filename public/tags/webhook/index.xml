<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>#Webhook on Metricly Docs</title>
    <link>https://metriclyhelpsite.netlify.com/tags/webhook/</link>
    <description>Recent content in #Webhook on Metricly Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://metriclyhelpsite.netlify.com/tags/webhook/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Webhook Integration</title>
      <link>https://metriclyhelpsite.netlify.com/integrations/webhook-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metriclyhelpsite.netlify.com/integrations/webhook-integration/</guid>
      <description>Webhooks are an HTTP/HTTPS callback request sent to a desired URL in response to some event, which could be pushing code to a repository or a comment being posted in an online community. A Webhook integration can be used to generate external events in Metriclyâ€™s Event Explorer, meaning you could create policies based on the content of those messages.
Configure  From the top navigation menu, select Integrations. Select the Webhook card.</description>
    </item>
    
    <item>
      <title>Webhook Payloads</title>
      <link>https://metriclyhelpsite.netlify.com/alerts-notifications/notifications/customize-notification-payloads/webhook-payloads/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metriclyhelpsite.netlify.com/alerts-notifications/notifications/customize-notification-payloads/webhook-payloads/</guid>
      <description>Webhook Payloads Webhooks have two main payload types: inbound and outbound. Outbound payloads can be customized and sent as notifications.
To create a customized webhook payload:
 Navigate to your Account Profile &amp;gt; Notifications &amp;gt; Webhook. Click + Add Webhook. Fill out all fields; select Custom from the Payload dropdown. Input your custom JSON + Freemarker writeup. Save.  Example 1
{ &amp;quot;message_type&amp;quot;:&amp;quot;&amp;lt;#if payloadType == &amp;quot;event&amp;quot;&amp;gt;${eventCategory.name}&amp;lt;/#if&amp;gt;&amp;lt;#if payloadType == &amp;quot;event_cleared&amp;quot;&amp;gt;RECOVERY&amp;lt;/#if&amp;gt;&amp;quot;, &amp;quot;entity_id&amp;quot;:&amp;quot;${elementId}&amp;quot;, &amp;quot;entity_display_name&amp;quot;:&amp;quot;${elementName}&amp;quot;, &amp;quot;state_message&amp;quot;:&amp;quot;&amp;lt;#if payloadType == &amp;quot;event&amp;quot;&amp;gt; [${elementName}] [${policyName}] [${eventTimestamp}] : ${policyDescription}&amp;lt;/#if&amp;gt;&amp;lt;#if payloadType == &amp;quot;event_cleared&amp;quot;&amp;gt;The policy ${policyName} has CLEARED for ${elementName} and is no longer generating events as of ${eventTimestamp}&amp;lt;/#if&amp;gt;&amp;quot; }  Example 2</description>
    </item>
    
  </channel>
</rss>