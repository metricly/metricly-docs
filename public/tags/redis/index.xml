<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>#Redis on Metricly Docs</title>
    <link>https://metriclyhelpsite.netlify.com/tags/redis/</link>
    <description>Recent content in #Redis on Metricly Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://metriclyhelpsite.netlify.com/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Metrics</title>
      <link>https://metriclyhelpsite.netlify.com/integrations/collectors/redis/redis-metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metriclyhelpsite.netlify.com/integrations/collectors/redis/redis-metrics/</guid>
      <description>Collected    Fully Qualified Name (FQN) Friendly Name     clients.blocked Blocked Clients   clients.connected Connected Clients   clients.longest_output_list Client Longest Output List   cpu.parent.sys Used System CPU   cpu.children.sys Used System CPU (Children)   cpu.parent.user Used CPU User   cpu.children.user Used CPU User (Children)   hash_max_zipmap.entries Maximum Hash Zipmap Entries   hash_max_zipmap.value Maximum Hash Zipmap Value   keys.</description>
    </item>
    
    <item>
      <title>redis</title>
      <link>https://metriclyhelpsite.netlify.com/integrations/collectors/redis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metriclyhelpsite.netlify.com/integrations/collectors/redis/</guid>
      <description>Redis is an adaptable, open source, in-memory data structure store that can be used as a database, cache, and message broker. Metricly can be used to monitor the performance of your Redis server.
Prerequisites  Linux Agent  Configure  Navigate to the collectors folder, /opt/netuitive-agent/conf/collectors. Open the RedisCollector.conf file. Change the enabled setting to True. Update the instances setting to contain any number of Redis instances you want to monitor as long as it follows the format hostname:port.</description>
    </item>
    
  </channel>
</rss>